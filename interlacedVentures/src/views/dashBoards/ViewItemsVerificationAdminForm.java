/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.dashBoards;

import java.awt.Desktop;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Application;
import models.ApplicationBusiness;
import models.ApplicationBusinessDirectory;
import models.ApplicationDirectory;
import models.ApplicationFreelancer;
import models.ApplicationFreelancerDirectory;
import models.BusinessUsersDirectory;
import models.FreelanceDirectory;
import models.business;
import models.freelancer;
import models.userDirectory;
import models.users;

/**
 *
 * @author kcsar
 */
public class ViewItemsVerificationAdminForm extends javax.swing.JFrame {

    /**
     * Creates new form ViewItemsVerificationAdminForm
     */
    public ViewItemsVerificationAdminForm() {
        initComponents();
    }
public static String filePath1 = "";
public static String filePath2 = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnViwId = new javax.swing.JButton();
        btnViewRes = new javax.swing.JButton();
        btnVLis = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblDisplay);

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Disapprove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lblName.setText("Name");

        btnViwId.setText("View ID");
        btnViwId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViwIdActionPerformed(evt);
            }
        });

        btnViewRes.setText("View Resume");
        btnViewRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewResActionPerformed(evt);
            }
        });

        btnVLis.setText("View License");
        btnVLis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVLisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(btnViwId, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewRes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVLis, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btnViwId)
                    .addComponent(btnViewRes)
                    .addComponent(btnVLis))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(lblName.getText().equals("Business")){
            
        DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
        String Name = tableModel.getValueAt(tblDisplay.getSelectedRow(), 0).toString();
        
            
            for(int  i = 0; i < ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().size(); i++){
                if(ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getName().equals(Name)){
                    
                    
                business bus= new business(
                  ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getPassword(),
                Name,
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getEmail(),
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getNumber(),
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getAddress(),
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getWebsite(),
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getOwnerName(),
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getLicensePath());
                
                
                ApplicationBusiness app = new ApplicationBusiness(ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getPassword(),
                        Name,
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getEmail(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getNumber(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getAddress(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getWebsite(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getOwnerName(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getLicensePath(),
                        "Completed");
                
                ApplicationBusinessDirectory.getInstance().updateApplicationBusiness(app, i);
                
                BusinessUsersDirectory.getInstance().addBusinessUser(bus);
                users login = new users(Name,
                ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getPassword(),
                "Business User");
                userDirectory.getInstance().addUser(login);
                
                
                }
            }
            
        }
        
        else if(lblName.getText().equals("FreeLancers")){
        DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
        String UName = tableModel.getValueAt(tblDisplay.getSelectedRow(), 0).toString();
            
            for(int  i = 0; i < ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().size(); i++){
                
                if(ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getUsername().equals(UName)){
                
                freelancer fl= new freelancer(
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLocation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPassword(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getDateOfJoining(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getHourlyRate(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPortfolio(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getWorkEx(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLatestWork(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEducation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getSkills(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getUsername(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getFirstName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLastName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getAge(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getGender(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPhoneNumber(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEmail(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getImagePath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getResPath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getIdPath()
                );
                
                FreelanceDirectory.getInstance().addFreelancer(fl);
                
                ApplicationFreelancer pL = new ApplicationFreelancer(ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLocation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPassword(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getDateOfJoining(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getHourlyRate(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPortfolio(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getWorkEx(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLatestWork(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEducation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getSkills(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getUsername(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getFirstName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLastName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getAge(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getGender(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPhoneNumber(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEmail(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getImagePath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getResPath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getIdPath(),
                "Completed");
                
                ApplicationFreelancerDirectory.getInstance().updateApplicationFreelancer(pL, i);
                
                
        users login = new users(UName,
                ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPassword(),
                "Freelancer");
        
                userDirectory.getInstance().addUser(login);
                }
            }
        }
        
        else{
        DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
        String UName = tableModel.getValueAt(tblDisplay.getSelectedRow(), 0).toString();
            
            for(int  i = 0; i < ApplicationDirectory.getInstance().getApplicationDir().size(); i++){
                
                if(ApplicationDirectory.getInstance().getApplicationDir().get(i).getUsername().equals(UName)){
                
               
                
                Application apL = new Application(
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getOrganisation(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getLocation(),  
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getDateOfJoining(),                       
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getPassword(),                       
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getRole(),                       
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getWorkEx(),                       
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getSalary(),                      
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getLatestWork(),                     
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getEducation(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getSkills(),          
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getUsername(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getFirstName(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getLastName(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getAge(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getGender(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getPhoneNumber(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getEmail(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getImagePath(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getResPath(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).getIdPath(),
                        ApplicationDirectory.getInstance().getApplicationDir().get(i).isStatus(),
                        "STA");
                //STA = sent to admin
                ApplicationDirectory.getInstance().updateApplication(apL, i);
                }
            }
                
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewResActionPerformed
        // TODO add your handling code here:
        if(lblName.getText().equals("FreeLancers")){
            DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
                filePath1 = tableModel.getValueAt(tblDisplay.getSelectedRow(), 4).toString();
            try{
            File pdf1 = new File(filePath1);
            if(pdf1.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(pdf1);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Desktop is not supported");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "FIle does not exist");
            }

            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
            
  
                
            }
    }//GEN-LAST:event_btnViewResActionPerformed

    private void btnVLisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVLisActionPerformed
        // TODO add your handling code here:
        
        try{
            if(lblName.getText().equals("Business")){
                DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
                filePath1 = tableModel.getValueAt(tblDisplay.getSelectedRow(), 2).toString();
            }
            File pdf1 = new File(filePath1);
            if(pdf1.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(pdf1);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Desktop is not supported");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "FIle does not exist");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnVLisActionPerformed

    private void btnViwIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViwIdActionPerformed
        // TODO add your handling code here:
        try{
            if(lblName.getText().equals("Business")){
                DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
                filePath1 = tableModel.getValueAt(tblDisplay.getSelectedRow(), 3).toString();
            }
            File pdf1 = new File(filePath1);
            if(pdf1.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(pdf1);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Desktop is not supported");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "FIle does not exist");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnViwIdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.hide();
        verificationAdminDashboard va = new verificationAdminDashboard();
        va.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    if(lblName.getText().equals("Business")){
            
        DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
        String Name = tableModel.getValueAt(tblDisplay.getSelectedRow(), 0).toString();
        
            
            for(int  i = 0; i < ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().size(); i++){
                if(ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getName().equals(Name)){
                    
                
                ApplicationBusiness app = new ApplicationBusiness(ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getPassword(),
                        Name,
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getEmail(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getNumber(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getAddress(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getWebsite(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getOwnerName(),
                        ApplicationBusinessDirectory.getInstance().getApplicationBusinessDir().get(i).getLicensePath(),
                        "Completed");
                
                ApplicationBusinessDirectory.getInstance().updateApplicationBusiness(app, i);
                
                
                }
            }
            
        }
    
    else if(lblName.getText().equals("FreeLancers")){
        DefaultTableModel tableModel = (DefaultTableModel) tblDisplay.getModel();
        String UName = tableModel.getValueAt(tblDisplay.getSelectedRow(), 0).toString();
            
            for(int  i = 0; i < ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().size(); i++){
                
                if(ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getUsername().equals(UName)){
                
               
                
                ApplicationFreelancer pL = new ApplicationFreelancer(ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLocation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPassword(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getDateOfJoining(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getHourlyRate(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPortfolio(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getWorkEx(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLatestWork(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEducation(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getSkills(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getUsername(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getFirstName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getLastName(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getAge(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getGender(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getPhoneNumber(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getEmail(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getImagePath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getResPath(),
                        ApplicationFreelancerDirectory.getInstance().getApplicationFreelancerDir().get(i).getIdPath(),
                "Completed");
                
                ApplicationFreelancerDirectory.getInstance().updateApplicationFreelancer(pL, i);
                
                }
            }
        }
    else{
        
    }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewItemsVerificationAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewItemsVerificationAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewItemsVerificationAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewItemsVerificationAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewItemsVerificationAdminForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnVLis;
    public javax.swing.JButton btnViewRes;
    public javax.swing.JButton btnViwId;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblName;
    public javax.swing.JTable tblDisplay;
    // End of variables declaration//GEN-END:variables
}
